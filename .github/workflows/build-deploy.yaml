name: Build and Deploy to Azure

on:
  push:
    paths:
      - .github/workflows/build-deploy.yaml
      - bicep/**/*.bicep
      - bicep/main.params.json
      - workbooks/example.json

jobs:
  build-workbook-data:
    name: Build Workbook data
    runs-on: ubuntu-latest
    env:
      WORKBOOK_PATH: workbooks/example.json
    outputs:
      serializedWorkbookData: ${{ steps.serialize.outputs.serializedWorkbookData }}
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10' 

    - name: Serialize Workbook data
      id: serialize
      run: |
        serializedWorkbookData=$(python -c "import json; print(json.dumps(json.load(open('$WORKBOOK_PATH'))))") 
        echo "serializedWorkbookData=${serializedWorkbookData@Q}" >> "$GITHUB_OUTPUT"

  deploy-azure-resources:
    needs: build-workbook-data
    name: Deploy Azure resources
    runs-on: ubuntu-latest
    env:
      LOCATION: eastus
      DEPLOYMENT_NAME: cluster-github-production-workflow-${{ github.run_id }}
      WORKBOOK_DATA: ${{needs.build-workbook-data.outputs.serializedWorkbookData}}
    steps:
    - uses: actions/checkout@v3

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Update parameter file
      uses: jossef/action-set-json-field@v2.1
      with:
        file: bicep/main.params.json
        field: parameters.workbookData.value
        value: ${{ env.WORKBOOK_DATA }}

    - name: Validate Bicep template
      uses: azure/arm-deploy@v1
      with:
        scope: subscription
        region: ${{ env.LOCATION }}
        template: bicep/main.bicep
        parameters: bicep/main.params.json
        deploymentName: ${{ env.DEPLOYMENT_NAME }}
        additionalArguments: "--what-if"

    - name: Deploy Bicep template
      if: github.ref == 'refs/heads/main'
      uses: azure/arm-deploy@v1
      with:
        scope: subscription
        region: ${{ env.LOCATION }}
        template: bicep/main.bicep
        parameters: bicep/main.params.json
        deploymentName: ${{ env.DEPLOYMENT_NAME }}